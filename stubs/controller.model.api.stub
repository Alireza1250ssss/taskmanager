<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }}

class {{ class }} extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @param Request $request
     * @return JsonResponse
     */
    public function index(Request $request) : JsonResponse
    {
        $response = $this->getResponse(__('apiResponse.index',['resource'=>'']),[
            {{ model }}::getRecords($request->toArray())->get()
        ]);
        return response()->json($response,$response['statusCode']);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \{{ namespacedStoreRequest }}  $request
     * @return JsonResponse
     */
    public function store({{ storeRequest }} $request) : JsonResponse
    {
        ${{ modelVariable }} = {{ model }}::create($request->validated());
        $response = $this->getResponse(__('apiResponse.store',['resource'=>'']), [
            '' => ${{ modelVariable }}
        ]);
        return response()->json($response, $response['statusCode']);
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return JsonResponse
     */
    public function show({{ model }} ${{ modelVariable }}) : JsonResponse
    {
        $response = $this->getResponse(__('apiResponse.show',['resource'=>'']), [
            '' => ${{ modelVariable }}
        ]);
        return response()->json($response, $response['statusCode']);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \{{ namespacedUpdateRequest }}  $request
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return JsonResponse
     */
    public function update({{ updateRequest }} $request, {{ model }} ${{ modelVariable }}) : JsonResponse
    {
        ${{ modelVariable }}->update($request->validated());
        $response = $this->getResponse(__('apiResponse.update',['resource'=>'']), [
            '' => ${{ modelVariable }}
        ]);

        return response()->json($response, $response['statusCode']);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  string  ${{ modelVariable }}
     * @return JsonResponse
     */
    public function destroy(${{ modelVariable }}) : JsonResponse
    {
        $count = {{ model }}::destroy(explode(',',${{ modelVariable }}));
        $response = $this->getResponse(__('apiResponse.destroy',['items'=>$count]));
        return response()->json($response, $response['statusCode']);
    }
}
